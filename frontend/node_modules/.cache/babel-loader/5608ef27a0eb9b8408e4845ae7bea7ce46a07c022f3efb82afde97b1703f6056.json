{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\Desktop\\\\Aman Shrivastava -  without backend\\\\JobConnect\\\\frontend\\\\src\\\\components\\\\PostJob\\\\index.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PostJob extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      if (name === 'salary') {\n        // Only allow empty string or positive integers\n        if (value === '' || /^[0-9]+$/.test(value)) {\n          this.setState({\n            [name]: value,\n            error: null\n          });\n        }\n      } else {\n        this.setState({\n          [name]: value,\n          error: null\n        });\n      }\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        title,\n        company,\n        location,\n        salary,\n        description\n      } = this.state;\n      if (!title || !company || !location || !description) {\n        this.setState({\n          error: \"Please fill in all required fields\"\n        });\n        toast.error(\"Please fill in all required fields\");\n        return;\n      }\n\n      // Create new job object\n      const newJob = {\n        title,\n        company,\n        location,\n        salary: salary ? parseInt(salary) : null,\n        description\n      };\n\n      // Notify parent component with the new job\n      this.props.onJobPosted(newJob);\n\n      // Clear the form\n      this.setState({\n        title: '',\n        company: '',\n        location: '',\n        salary: '',\n        description: '',\n        error: null\n      });\n      toast.success(\"Job posted successfully!\", {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    };\n    this.state = {\n      title: '',\n      company: '',\n      location: '',\n      salary: '',\n      description: '',\n      error: null\n    };\n  }\n  render() {\n    const {\n      title,\n      company,\n      location,\n      salary,\n      description,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-job-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Post a New Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"job-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          onChange: this.handleChange,\n          placeholder: \"Job Title\",\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"company\",\n          value: company,\n          onChange: this.handleChange,\n          placeholder: \"Company Name\",\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          value: location,\n          onChange: this.handleChange,\n          placeholder: \"Location\",\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"salary\",\n          value: salary,\n          onChange: this.handleChange,\n          placeholder: \"Salary\",\n          className: \"form-input\",\n          pattern: \"[0-9]*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: description,\n          onChange: this.handleChange,\n          placeholder: \"Job Description\",\n          className: \"form-textarea\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Post Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default PostJob;","map":{"version":3,"names":["React","Component","ToastContainer","toast","jsxDEV","_jsxDEV","PostJob","constructor","props","handleChange","e","name","value","target","test","setState","error","handleSubmit","preventDefault","title","company","location","salary","description","state","newJob","parseInt","onJobPosted","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","pattern"],"sources":["C:/Users/surya/Desktop/Aman Shrivastava -  without backend/JobConnect/frontend/src/components/PostJob/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './index.css';\r\n\r\nclass PostJob extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      company: '',\r\n      location: '',\r\n      salary: '',\r\n      description: '',\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'salary') {\r\n      // Only allow empty string or positive integers\r\n      if (value === '' || /^[0-9]+$/.test(value)) {\r\n        this.setState({ \r\n          [name]: value,\r\n          error: null\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ \r\n        [name]: value,\r\n        error: null\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { title, company, location, salary, description } = this.state;\r\n    \r\n    if (!title || !company || !location || !description) {\r\n      this.setState({ error: \"Please fill in all required fields\" });\r\n      toast.error(\"Please fill in all required fields\");\r\n      return;\r\n    }\r\n\r\n    // Create new job object\r\n    const newJob = {\r\n      title,\r\n      company,\r\n      location,\r\n      salary: salary ? parseInt(salary) : null,\r\n      description\r\n    };\r\n\r\n    // Notify parent component with the new job\r\n    this.props.onJobPosted(newJob);\r\n\r\n    // Clear the form\r\n    this.setState({\r\n      title: '',\r\n      company: '',\r\n      location: '',\r\n      salary: '',\r\n      description: '',\r\n      error: null\r\n    });\r\n\r\n    toast.success(\"Job posted successfully!\", {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, company, location, salary, description, error } = this.state;\r\n\r\n    return (\r\n      <div className=\"post-job-container\">\r\n        <h2 className=\"form-title\">Post a New Job</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <form onSubmit={this.handleSubmit} className=\"job-form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Job Title\"\r\n            className=\"form-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Company Name\"\r\n            className=\"form-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Location\"\r\n            className=\"form-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"salary\"\r\n            value={salary}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Salary\"\r\n            className=\"form-input\"\r\n            pattern=\"[0-9]*\"\r\n          />\r\n          <textarea\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Job Description\"\r\n            className=\"form-textarea\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            Post Job\r\n          </button>\r\n        </form>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostJob;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}